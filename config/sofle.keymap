/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        mcr_copy: mcr_copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_COMMAND &kp C &kt LEFT_COMMAND>;
            label = "MCR_COPY";
        };

        mcr_paste: mcr_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_COMMAND &kp V &kt LEFT_COMMAND>;
            label = "MCR_PASTE";
        };

        mcr_undo: mcr_undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_COMMAND &kp Z &kt LEFT_COMMAND>;
            label = "MCR_UNDO";
        };

        mcr_cut: mcr_cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp X &kt LEFT_COMMAND>;
            label = "MCR_CUT";
        };

        previous_word: previous_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp LEFT &kt LEFT_ALT>;
            label = "PREVIOUS_WORD";
        };

        next_word: next_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp RIGHT &kt LEFT_ALT>;
            label = "NEXT_WORD";
        };

        sel_prev_word: sel_prev_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kt LEFT_SHIFT &kp LEFT &kt LEFT_SHIFT &kt LEFT_ALT>;
            label = "SEL_PREV_WORD";
        };

        sel_next_word: sel_next_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kt LEFT_SHIFT &kp RIGHT &kt LEFT_SHIFT &kt LEFT_ALT>;
            label = "SEL_NEXT_WORD";
        };

        del_whole_line: del_whole_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C_AC_HOME &sk LEFT_SHIFT &kp END &kp DELETE>;
            label = "DEL_WHOLE_LINE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC    &kp N1  &kp N2            &kp N3    &kp N4            &kp N5                               &kp N6  &kp N7  &kp N8     &kp N9     &kp N0    &kp BACKSPACE
&kp GRAVE  &kp Q   &kp W             &kp E     &kp R             &kp T                                &kp Y   &kp U   &kp I      &kp O      &kp P     &kp BACKSLASH
&kp TAB    &kp A   &kp S             &kp D     &kp F             &kp G                                &kp H   &kp J   &kp K      &kp L      &kp SEMI  &kp SINGLE_QUOTE
&kp LSHFT  &kp Z   &kp X             &kp C     &kp V             &kp B   &kp C_MUTE    &kp C_AL_LOCK  &kp N   &kp M   &kp COMMA  &kp DOT    &kp FSLH  &kp RIGHT_SHIFT
                   &kp LEFT_CONTROL  &kp LALT  &kp LEFT_COMMAND  &mo 1   &kp ENTER     &kp SPACE      &mo 2   &tog 3  &kp PG_UP  &kp PG_DN
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        dev_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // | `     |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | RAISE |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp GRAVE  &kp F1         &kp F2          &kp F3        &kp F4        &kp F5                                    &kp F6                &kp F7                 &kp F8     &kp F9     &kp F10       &kp DELETE
&trans     &kp HOME       &none           &kp END       &none         &kp C_AC_PRINT                            &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans     &trans     &trans        &kp KP_MINUS
&trans     &kp C_AC_HOME  &none           &none         &none         &kp PRINTSCREEN                           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans     &trans     &none         &kp PLUS
&trans     &trans         &none           &none         &none         &none            &trans    &kp C_PIP      &kp LBKT              &kp RBKT               &kp MINUS  &kp UNDER  &kp KP_EQUAL  &kp ENTER
                          &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_GUI  &trans           &trans    &kp C_AL_LOCK  &trans                &trans                 &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        media_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |       |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                |  <-  |   v  |   ^   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4                      &trans        &trans      &trans        &trans  &trans   &trans
&none       &previous_word  &kp UP        &next_word    &none           &caps_word                        &kp C_PREV    &kp C_PP    &kp C_NEXT    &trans  &trans   &trans
&trans      &kp LEFT        &kp DOWN      &kp RIGHT     &sel_prev_word  &sel_next_word                    &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &none   &kp DEL  &kp BSPC
&trans      &mcr_undo       &mcr_cut      &mcr_copy     &mcr_paste      &none           &trans    &trans  &trans        &trans      &trans        &trans  &trans   &trans
                            &trans        &trans        &trans          &trans          &trans    &trans  &trans        &trans      &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        num_pad {
            bindings = <
&trans  &trans          &trans        &trans      &trans          &trans                               &trans           &trans           &trans           &trans           &trans     &trans
&trans  &previous_word  &kp UP_ARROW  &next_word  &trans          &trans                               &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS      &trans     &trans
&trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT   &sel_prev_word  &sel_next_word                       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SUBTRACT  &trans     &trans
&trans  &trans          &trans        &trans      &trans          &trans          &trans    &trans     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT       &kp KP_N0  &trans
                        &trans        &trans      &trans          &trans          &trans    &kp ENTER  &kp KP_N0        &trans           &trans           &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
